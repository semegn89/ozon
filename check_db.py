#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sqlite3
from dotenv import load_dotenv

load_dotenv()

def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 30)
    
    db_path = "data.db"
    
    if not os.path.exists(db_path):
        print(f"‚ùå –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {db_path}")
        return
    
    print(f"‚úÖ –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω: {db_path}")
    print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(db_path)} –±–∞–π—Ç")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        tables = cursor.fetchall()
        
        print(f"\nüìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        for table in tables:
            print(f"   - {table[0]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É models
        if ('models',) in tables:
            cursor.execute("SELECT COUNT(*) FROM models")
            count = cursor.fetchone()[0]
            print(f"\nüì¶ –ú–æ–¥–µ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ models: {count}")
            
            if count > 0:
                cursor.execute("SELECT id, name, description, created_at FROM models LIMIT 5")
                models = cursor.fetchall()
                
                print(f"\nüìã –ü–µ—Ä–≤—ã–µ {len(models)} –º–æ–¥–µ–ª–µ–π:")
                for model in models:
                    print(f"   ID: {model[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {model[1]}, –û–ø–∏—Å–∞–Ω–∏–µ: {model[2]}, –°–æ–∑–¥–∞–Ω–æ: {model[3]}")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ models –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É instructions
        if ('instructions',) in tables:
            cursor.execute("SELECT COUNT(*) FROM instructions")
            count = cursor.fetchone()[0]
            print(f"\nüìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ instructions: {count}")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ instructions –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É tickets
        if ('tickets',) in tables:
            cursor.execute("SELECT COUNT(*) FROM tickets")
            count = cursor.fetchone()[0]
            print(f"\nüé´ –û–±—Ä–∞—â–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ tickets: {count}")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ tickets –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    check_database()
