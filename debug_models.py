#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –º–æ–¥–µ–ª—è–º–∏
"""

import os
from dotenv import load_dotenv
from models import create_tables, get_session, Model
from services.models_service import ModelsService

load_dotenv()

def debug_models():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–¥–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–¥–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    create_tables()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = get_session()
    try:
        models_service = ModelsService(db)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏
        models = models_service.get_models(page=0, limit=100)
        total_count = models_service.get_models_count()
        
        print(f"üìä –í—Å–µ–≥–æ –º–æ–¥–µ–ª–µ–π –≤ –±–∞–∑–µ: {total_count}")
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(models)}")
        print()
        
        if not models:
            print("‚ùå –ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞")
            return
        
        print("üì¶ –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π:")
        print("-" * 30)
        
        for model in models:
            print(f"üÜî ID: {model.id}")
            print(f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {model.name}")
            print(f"üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {model.description or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}")
            print(f"üè∑Ô∏è –¢–µ–≥–∏: {model.tags or '–ù–µ—Ç —Ç–µ–≥–æ–≤'}")
            print(f"üìÖ –°–æ–∑–¥–∞–Ω–æ: {model.created_at}")
            print(f"üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {model.updated_at}")
            print(f"üìé –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: {len(model.instructions)}")
            print("-" * 30)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–µ–ª—å
        if models:
            first_model = models[0]
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ ID {first_model.id}:")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ –ø–æ ID
            found_model = models_service.get_model_by_id(first_model.id)
            if found_model:
                print(f"‚úÖ –ú–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID: {found_model.name}")
            else:
                print(f"‚ùå –ú–æ–¥–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID: {first_model.id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏
            found_by_name = models_service.get_model_by_name(first_model.name)
            if found_by_name:
                print(f"‚úÖ –ú–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –∏–º–µ–Ω–∏: {found_by_name.name}")
            else:
                print(f"‚ùå –ú–æ–¥–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –∏–º–µ–Ω–∏: {first_model.name}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        db.close()

def test_model_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏"""
    print("\nüß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏")
    print("=" * 30)
    
    db = get_session()
    try:
        models_service = ModelsService(db)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –º–æ–¥–µ–ª—å
        test_model = models_service.create_model(
            name="–¢–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å",
            description="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –º–æ–¥–µ–ª–∏",
            tags="—Ç–µ—Å—Ç, –ø—Ä–æ–≤–µ—Ä–∫–∞"
        )
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞:")
        print(f"   ID: {test_model.id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {test_model.name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å
        found_model = models_service.get_model_by_id(test_model.id)
        if found_model:
            print(f"‚úÖ –ú–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è: {found_model.name}")
        else:
            print(f"‚ùå –ú–æ–¥–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è!")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –º–æ–¥–µ–ª—å
        models_service.delete_model(test_model.id)
        print(f"üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å —É–¥–∞–ª–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    debug_models()
    test_model_creation()
